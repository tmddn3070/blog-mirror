import {
  e
} from "./chunk-RU6KZPHD.js";
import "./chunk-DC5AMYBS.js";

// node_modules/.pnpm/@swup+body-class-plugin@3.2.0_swup@4.6.1/node_modules/@swup/body-class-plugin/dist/index.modern.js
function t() {
  return t = Object.assign ? Object.assign.bind() : function(s) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var i2 = arguments[t2];
      for (var a in i2) Object.prototype.hasOwnProperty.call(i2, a) && (s[a] = i2[a]);
    }
    return s;
  }, t.apply(this, arguments);
}
var i = class extends e {
  constructor(s = {}) {
    super(), this.name = "SwupBodyClassPlugin", this.requires = { swup: ">=4.6" }, this.defaults = { prefix: "" }, this.options = void 0, this.updateBodyClass = (s2) => {
      this.updateClassNames(document.body, s2.to.document.body);
    }, this.options = t({}, this.defaults, s);
  }
  mount() {
    this.on("content:replace", this.updateBodyClass);
  }
  updateClassNames(s, t2) {
    const i2 = [...s.classList].filter((s2) => this.isValidClassName(s2)), a = [...t2.classList].filter((s2) => this.isValidClassName(s2));
    s.classList.remove(...i2), s.classList.add(...a);
  }
  isValidClassName(s) {
    return s && s.startsWith(this.options.prefix);
  }
};
export {
  i as default
};
//# sourceMappingURL=@swup_astro_client_SwupBodyClassPlugin.js.map
